name: CI Dev Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose deployment environment'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - staging
          - production
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      artifact-path: build.zip
      version: ${{ steps.version.outputs.build_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build || true

      - name: Create build.zip
        run: zip -r build.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

      - name: Generate Version Tag
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "build_tag=${{ github.event.inputs.environment }}-v$VERSION" >> $GITHUB_ENV
          echo "build_tag=${{ github.event.inputs.environment }}-v$VERSION" >> $GITHUB_OUTPUT
          echo "Generated tag: ${{ github.event.inputs.environment }}-v$VERSION"

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ needs.build.outputs.version }}
          git push origin ${{ needs.build.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          gh release create "${{ needs.build.outputs.version }}" build.zip \
            --notes "${{ vars.RELEASE_NOTE }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on GitHub
        run: |
          gh issue comment 1 --body "Deployment of `${{ needs.build.outputs.version }}` to `${{ github.event.inputs.environment }}` completed."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
